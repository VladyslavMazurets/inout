<?php

/** Auto-generated by Craftable PRO */

namespace App\Models;

use Brackets\CraftablePro\Media\AutoProcessMediaTrait;
use Brackets\CraftablePro\Media\HasMediaPreviewsTrait;
use Brackets\CraftablePro\Media\InteractsWithMedia;
use Brackets\CraftablePro\Media\ProcessMediaTrait;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Spatie\MediaLibrary\HasMedia;
use Spatie\MediaLibrary\MediaCollections\Models\Media;

class Testimonial extends Model implements HasMedia
{
    use AutoProcessMediaTrait;
    use HasFactory;
    use HasMediaPreviewsTrait;
    use InteractsWithMedia;
    use ProcessMediaTrait;

    protected $table = 'testimonials';

    protected $fillable = ['name', 'position', 'rating', 'content', 'custom_link', 'date'];

    public function course()
    {
        return $this->belongsTo(Course::class);
    }

    public function registerMediaCollections(): void
    {
        $this->addMediaCollection('customer_avatar')->acceptsMimeTypes(['image/jpeg', 'image/png', 'image/gif'])->useFallbackUrl('fallback-avatar.jpeg')->useFallbackPath(public_path('fallback-avatar.jpeg'));

    }

    public function registerMediaConversions(?Media $media = null): void
    {
        $this->autoRegisterPreviews();
    }

    public function getAvatarUrlAttribute(): string
    {
        return $this->getFirstMediaUrl('customer_avatar');
    }

    protected $casts = [];
}
